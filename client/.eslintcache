[{"/Users/roshchinaleksandr/IdeaProjects/React_Express_PostrgeSQL_WEB_CHAT/client/src/index.js":"1","/Users/roshchinaleksandr/IdeaProjects/React_Express_PostrgeSQL_WEB_CHAT/client/src/reportWebVitals.js":"2","/Users/roshchinaleksandr/IdeaProjects/React_Express_PostrgeSQL_WEB_CHAT/client/src/App.js":"3","/Users/roshchinaleksandr/IdeaProjects/React_Express_PostrgeSQL_WEB_CHAT/client/src/router/index.jsx":"4","/Users/roshchinaleksandr/IdeaProjects/React_Express_PostrgeSQL_WEB_CHAT/client/src/components/Auth/Login.jsx":"5","/Users/roshchinaleksandr/IdeaProjects/React_Express_PostrgeSQL_WEB_CHAT/client/src/components/Chat/Chat.jsx":"6","/Users/roshchinaleksandr/IdeaProjects/React_Express_PostrgeSQL_WEB_CHAT/client/src/components/Auth/Register.jsx":"7","/Users/roshchinaleksandr/IdeaProjects/React_Express_PostrgeSQL_WEB_CHAT/client/src/services/authService.js":"8","/Users/roshchinaleksandr/IdeaProjects/React_Express_PostrgeSQL_WEB_CHAT/client/src/services/api.js":"9","/Users/roshchinaleksandr/IdeaProjects/React_Express_PostrgeSQL_WEB_CHAT/client/src/store/index.js":"10","/Users/roshchinaleksandr/IdeaProjects/React_Express_PostrgeSQL_WEB_CHAT/client/src/store/reducers/index.js":"11","/Users/roshchinaleksandr/IdeaProjects/React_Express_PostrgeSQL_WEB_CHAT/client/src/store/reducers/auth.js":"12","/Users/roshchinaleksandr/IdeaProjects/React_Express_PostrgeSQL_WEB_CHAT/client/src/store/actions/auth.js":"13","/Users/roshchinaleksandr/IdeaProjects/React_Express_PostrgeSQL_WEB_CHAT/client/src/components/Route/ProtectedRoute.jsx":"14","/Users/roshchinaleksandr/IdeaProjects/React_Express_PostrgeSQL_WEB_CHAT/client/src/components/Chat/components/Navbar/Navbar.jsx":"15","/Users/roshchinaleksandr/IdeaProjects/React_Express_PostrgeSQL_WEB_CHAT/client/src/components/Modal/Modal.jsx":"16","/Users/roshchinaleksandr/IdeaProjects/React_Express_PostrgeSQL_WEB_CHAT/client/src/store/types/index.js":"17","/Users/roshchinaleksandr/IdeaProjects/React_Express_PostrgeSQL_WEB_CHAT/client/src/store/reducers/chat.js":"18","/Users/roshchinaleksandr/IdeaProjects/React_Express_PostrgeSQL_WEB_CHAT/client/src/store/actions/chat.js":"19","/Users/roshchinaleksandr/IdeaProjects/React_Express_PostrgeSQL_WEB_CHAT/client/src/services/chatService.js":"20","/Users/roshchinaleksandr/IdeaProjects/React_Express_PostrgeSQL_WEB_CHAT/client/src/components/Chat/components/FriendsList/FriendsList.jsx":"21","/Users/roshchinaleksandr/IdeaProjects/React_Express_PostrgeSQL_WEB_CHAT/client/src/components/Chat/components/Messenger/Messenger.jsx":"22","/Users/roshchinaleksandr/IdeaProjects/React_Express_PostrgeSQL_WEB_CHAT/client/src/components/Chat/components/Friend/Friend.jsx":"23","/Users/roshchinaleksandr/IdeaProjects/React_Express_PostrgeSQL_WEB_CHAT/client/src/utils/helpers.js":"24","/Users/roshchinaleksandr/IdeaProjects/React_Express_PostrgeSQL_WEB_CHAT/client/src/components/Chat/components/ChatHeader/ChatHeader.jsx":"25","/Users/roshchinaleksandr/IdeaProjects/React_Express_PostrgeSQL_WEB_CHAT/client/src/components/Chat/components/MessageBox/MessageBox.jsx":"26","/Users/roshchinaleksandr/IdeaProjects/React_Express_PostrgeSQL_WEB_CHAT/client/src/components/Chat/components/Message/Message.jsx":"27","/Users/roshchinaleksandr/IdeaProjects/React_Express_PostrgeSQL_WEB_CHAT/client/src/components/Chat/components/MessageInput/MessageInput.jsx":"28","/Users/roshchinaleksandr/IdeaProjects/React_Express_PostrgeSQL_WEB_CHAT/client/src/components/Chat/hooks/socketConnect.js":"29"},{"size":618,"mtime":1608907394846,"results":"30","hashOfConfig":"31"},{"size":362,"mtime":1608815706320,"results":"32","hashOfConfig":"31"},{"size":694,"mtime":1609244897491,"results":"33","hashOfConfig":"31"},{"size":566,"mtime":1608925258967,"results":"34","hashOfConfig":"31"},{"size":1722,"mtime":1609241607102,"results":"35","hashOfConfig":"31"},{"size":866,"mtime":1610889004079,"results":"36","hashOfConfig":"31"},{"size":2898,"mtime":1608924196639,"results":"37","hashOfConfig":"31"},{"size":1335,"mtime":1609457414723,"results":"38","hashOfConfig":"31"},{"size":657,"mtime":1609704507274,"results":"39","hashOfConfig":"31"},{"size":364,"mtime":1609510305383,"results":"40","hashOfConfig":"31"},{"size":176,"mtime":1610541149429,"results":"41","hashOfConfig":"31"},{"size":988,"mtime":1610619087820,"results":"42","hashOfConfig":"31"},{"size":909,"mtime":1610543838111,"results":"43","hashOfConfig":"31"},{"size":494,"mtime":1608925327039,"results":"44","hashOfConfig":"31"},{"size":4347,"mtime":1609510786648,"results":"45","hashOfConfig":"31"},{"size":976,"mtime":1609339909593,"results":"46","hashOfConfig":"31"},{"size":145,"mtime":1609704320239,"results":"47","hashOfConfig":"31"},{"size":712,"mtime":1610622504419,"results":"48","hashOfConfig":"31"},{"size":668,"mtime":1610622327354,"results":"49","hashOfConfig":"31"},{"size":238,"mtime":1610539606454,"results":"50","hashOfConfig":"31"},{"size":931,"mtime":1610622327361,"results":"51","hashOfConfig":"31"},{"size":799,"mtime":1610827235951,"results":"52","hashOfConfig":"31"},{"size":1122,"mtime":1610622207004,"results":"53","hashOfConfig":"31"},{"size":100,"mtime":1603750284000,"results":"54","hashOfConfig":"31"},{"size":3939,"mtime":1610813724880,"results":"55","hashOfConfig":"31"},{"size":917,"mtime":1610817853017,"results":"56","hashOfConfig":"31"},{"size":906,"mtime":1610825931917,"results":"57","hashOfConfig":"31"},{"size":1487,"mtime":1610831035715,"results":"58","hashOfConfig":"31"},{"size":365,"mtime":1610889631538,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"14el7kv",{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"62"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"62"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"62"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"62"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"62"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"62"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/roshchinaleksandr/IdeaProjects/React_Express_PostrgeSQL_WEB_CHAT/client/src/index.js",[],["125","126"],"/Users/roshchinaleksandr/IdeaProjects/React_Express_PostrgeSQL_WEB_CHAT/client/src/reportWebVitals.js",[],"/Users/roshchinaleksandr/IdeaProjects/React_Express_PostrgeSQL_WEB_CHAT/client/src/App.js",[],"/Users/roshchinaleksandr/IdeaProjects/React_Express_PostrgeSQL_WEB_CHAT/client/src/router/index.jsx",["127"],"import React from 'react'\nimport {Switch, Route} from 'react-router-dom'\nimport Login from '../components/Auth/Login';\nimport Chat from '../components/Chat/Chat';\nimport Register from '../components/Auth/Register';\nimport ProtectedRoute from '../components/Route/ProtectedRoute';\n\n\nexport default () => {\n  return (\n    <Switch>\n      <ProtectedRoute exact path='/' component={Chat} />\n      <Route path='/login' component={Login} />\n      <Route path='/register' component={Register} />\n      <Route render={() => <h1>404 page not found</h1>} />\n    </Switch>\n  )\n}","/Users/roshchinaleksandr/IdeaProjects/React_Express_PostrgeSQL_WEB_CHAT/client/src/components/Auth/Login.jsx",[],"/Users/roshchinaleksandr/IdeaProjects/React_Express_PostrgeSQL_WEB_CHAT/client/src/components/Chat/Chat.jsx",[],"/Users/roshchinaleksandr/IdeaProjects/React_Express_PostrgeSQL_WEB_CHAT/client/src/components/Auth/Register.jsx",[],"/Users/roshchinaleksandr/IdeaProjects/React_Express_PostrgeSQL_WEB_CHAT/client/src/services/authService.js",[],"/Users/roshchinaleksandr/IdeaProjects/React_Express_PostrgeSQL_WEB_CHAT/client/src/services/api.js",[],"/Users/roshchinaleksandr/IdeaProjects/React_Express_PostrgeSQL_WEB_CHAT/client/src/store/index.js",[],"/Users/roshchinaleksandr/IdeaProjects/React_Express_PostrgeSQL_WEB_CHAT/client/src/store/reducers/index.js",[],"/Users/roshchinaleksandr/IdeaProjects/React_Express_PostrgeSQL_WEB_CHAT/client/src/store/reducers/auth.js",[],"/Users/roshchinaleksandr/IdeaProjects/React_Express_PostrgeSQL_WEB_CHAT/client/src/store/actions/auth.js",[],"/Users/roshchinaleksandr/IdeaProjects/React_Express_PostrgeSQL_WEB_CHAT/client/src/components/Route/ProtectedRoute.jsx",[],"/Users/roshchinaleksandr/IdeaProjects/React_Express_PostrgeSQL_WEB_CHAT/client/src/components/Chat/components/Navbar/Navbar.jsx",[],"/Users/roshchinaleksandr/IdeaProjects/React_Express_PostrgeSQL_WEB_CHAT/client/src/components/Modal/Modal.jsx",["128"],"import React from 'react';\nimport './Modal.scss';\n\nconst Modal = (props) => {\n\n  const findByKey = (name) =>\n    props.children.map(child => {\n      if (child.key === name) {\n        return child;\n      }\n    });\n\n  const closeModal = (e) => {\n    e.stopPropagation();\n    if (e.target.classList.contains('modal-close')) {\n\n    }\n  };\n\n  return (\n    <div onClick={closeModal} className='modal-mask modal-close'>\n      <div className='modal-wrapper'>\n        <div className='modal-container'>\n          <div className='modal-header'>\n            {findByKey('header')}\n          </div>\n          <div className='modal-body'>\n            {findByKey('body')}\n          </div>\n          <div className='modal-footer'>\n            <button onClick={closeModal}\n                    className='modal-close'>CLOSE\n            </button>\n            {findByKey('footer')}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Modal;\n","/Users/roshchinaleksandr/IdeaProjects/React_Express_PostrgeSQL_WEB_CHAT/client/src/store/types/index.js",[],"/Users/roshchinaleksandr/IdeaProjects/React_Express_PostrgeSQL_WEB_CHAT/client/src/store/reducers/chat.js",[],"/Users/roshchinaleksandr/IdeaProjects/React_Express_PostrgeSQL_WEB_CHAT/client/src/store/actions/chat.js",[],"/Users/roshchinaleksandr/IdeaProjects/React_Express_PostrgeSQL_WEB_CHAT/client/src/services/chatService.js",[],"/Users/roshchinaleksandr/IdeaProjects/React_Express_PostrgeSQL_WEB_CHAT/client/src/components/Chat/components/FriendsList/FriendsList.jsx",["129"],"import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux'\nimport Friend from '../Friend/Friend';\nimport { setCurrentChat } from '../../../../store/actions/chat'\n\nimport './FriendsList.scss';\n\n\nconst FriendsList = () => {\n\n  const dispatch = useDispatch()\n  const chats = useSelector(state => state.chatReducer.chats)\n\n  const openChat = (chat) => {\n    dispatch(setCurrentChat(chat))\n  }\n\n  return (\n    <div id='friends' className='shadow-light'>\n      <div id='title'>\n        <h3 className='m-0'>Friends</h3>\n        <button onClick={() => {}}>ADD</button>\n      </div>\n      <hr />\n\n      <div id='friends-box'>\n        {\n          chats.length > 0\n          ? chats.map(chat => {\n            return <Friend click={() => openChat(chat)} chat={chat} key={chat.id} />\n            })\n            : <p id='no-chat'>No friends added</p>\n        }\n      </div>\n    </div>\n  );\n};\n\nexport default FriendsList;\n","/Users/roshchinaleksandr/IdeaProjects/React_Express_PostrgeSQL_WEB_CHAT/client/src/components/Chat/components/Messenger/Messenger.jsx",[],"/Users/roshchinaleksandr/IdeaProjects/React_Express_PostrgeSQL_WEB_CHAT/client/src/components/Chat/components/Friend/Friend.jsx",[],"/Users/roshchinaleksandr/IdeaProjects/React_Express_PostrgeSQL_WEB_CHAT/client/src/utils/helpers.js",[],"/Users/roshchinaleksandr/IdeaProjects/React_Express_PostrgeSQL_WEB_CHAT/client/src/components/Chat/components/ChatHeader/ChatHeader.jsx",["130","131","132"],"import React, { useState, Fragment } from 'react';\nimport { userStatus } from '../../../../utils/helpers';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { useSelector } from 'react-redux';\nimport Modal from '../../../Modal/Modal';\nimport ChatService from '../../../../services/chatService';\n\nimport './ChatHeader.scss';\n\nconst ChatHeader = ({ chat }) => {\n\n  const [showChatOptions, setShowChatOptions] = useState(false)\n  const [showAddFriendModal, setShowAddFriendModal] = useState(false)\n  const [suggestions, setSuggestions] = useState([])\n\n  // const socket = useSelector(state => state.chatReducer.socket)\n\n  const searchFriends = (e) => {\n    // ChatService.searchUsers(e.target.value)\n    //   .then(res => setSuggestions(res))\n  }\n\n  const addNewFriend = (id) => {\n    // ChatService.addFriendToGroupChat(id, chat.id)\n    //   .then(data => {\n    //     socket.emit('add-user-to-group', data)\n    //     setShowAddFriendModal(false)\n    //   }).catch(err => console.log(err))\n  }\n\n  const leaveChat = () => {\n    // ChatService.leaveCurrentChat(chat.id)\n    //   .then(data => {\n    //     socket.emit('leave-current-chat', data)\n    //   })\n    //   .catch(err => console.log(err))\n  }\n\n  const deleteChat = () => {\n    // ChatService.deleteCurrentChat(chat.id)\n    //   .then(data => {\n    //     socket.emit('delete-chat', data)\n    //   })\n  }\n\n  return (\n    <Fragment>\n      <div id='chatter'>\n        {\n          chat.Users.map(user => {\n            return <div className='chatter-info' key={user.id}>\n              <h3>{user.firstName} {user.lastName}</h3>\n              <div className='chatter-status'>\n                <span className={`online-status ${userStatus(user)}`}/>\n              </div>\n            </div>\n          })\n        }\n      </div>\n      <FontAwesomeIcon\n        onClick={() => setShowChatOptions(!showChatOptions)}\n        icon={['fas', 'ellipsis-v']}\n        className='fa-icon'\n      />\n      {\n        showChatOptions\n          ? <div id='settings'>\n            <div onClick={() => setShowAddFriendModal(true)}>\n              <FontAwesomeIcon\n                icon={['fas', 'user-plus']}\n                className='fa-icon'\n              />\n              <p>Add user to chat</p>\n            </div>\n\n            {\n              chat.type === 'group'\n                ? <div onClick={() => leaveChat()}>\n                  <FontAwesomeIcon\n                    icon={['fas', 'sign-out-alt']}\n                    className='fa-icon'\n                  />\n                  <p>Leave chat</p>\n                </div>\n                : null\n            }\n\n            {\n              chat.type === 'dual' ?\n                <div onClick={() => deleteChat()}>\n                  <FontAwesomeIcon\n                    icon={['fas', 'trash']}\n                    className='fa-icon'\n                  />\n                  <p>Delete chat</p>\n                </div>\n                : null\n            }\n          </div>\n          : null\n      }\n      {\n        showAddFriendModal &&\n        <Modal click={() => setShowAddFriendModal(false)}>\n          <Fragment key='header'>\n            <h3 className='m-0'>Add friend to group chat</h3>\n          </Fragment>\n\n          <Fragment key='body'>\n            <p>Find friends by typing their name bellow</p>\n            <input\n              onInput={e => searchFriends(e)}\n              type='text'\n              placeholder='Search...'\n            />\n            <div id='suggestions'>\n              {\n                suggestions.map(user => {\n                  return <div key={user.id} className='suggestion'>\n                    <p className='m-0'>{user.firstName} {user.lastName}</p>\n                    <button onClick={() => addNewFriend(user.id)}>ADD</button>\n                  </div>\n                })\n              }\n            </div>\n          </Fragment>\n        </Modal>\n      }\n    </Fragment>\n  );\n};\n\nexport default ChatHeader;\n","/Users/roshchinaleksandr/IdeaProjects/React_Express_PostrgeSQL_WEB_CHAT/client/src/components/Chat/components/MessageBox/MessageBox.jsx",["133","134"],"import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Message from '../Message/Message'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport './MessageBox.scss';\n\nconst MessageBox = ({ chat }) => {\n\n  const dispatch = useDispatch();\n\n  const user = useSelector(state => state.authReducer.user);\n\n\n  const [loading, setLoading] = useState(false);\n\n  return (\n    <div onScroll={() => {\n    }} id='msg-box'>\n      {\n        loading\n          ? <p className='loader m-0'><FontAwesomeIcon icon='spinner' className='fa-spin'/></p>\n          : null\n      }\n      {\n        chat.Messages.map((message, index) => {\n          return <Message\n            user={user}\n            chat={chat}\n            message={message}\n            index={index}\n            key={message.id}\n          />;\n        })\n      }\n    </div>\n  );\n};\n\nexport default MessageBox;\n","/Users/roshchinaleksandr/IdeaProjects/React_Express_PostrgeSQL_WEB_CHAT/client/src/components/Chat/components/Message/Message.jsx",[],"/Users/roshchinaleksandr/IdeaProjects/React_Express_PostrgeSQL_WEB_CHAT/client/src/components/Chat/components/MessageInput/MessageInput.jsx",["135","136","137"],"import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport './MessageInput.scss';\n\nconst MessageInput = ({ chat }) => {\n\n  const user = useSelector(state => state.authReducer.user)\n\n  const [message, setMessage] = useState('')\n  const [image, setImage] = useState('')\n\n  const handleMessage = (e) => {\n    const value = e.target.value\n    setMessage(value)\n\n    // notify other users that this user is typing something\n  }\n\n  const handleKeyDown = (e, imageUpload) => {\n    if (e.key === 'Enter') sendMessage(imageUpload)\n  }\n\n  const sendMessage = (imageUpload) => {\n\n    if (message.length < 1 && !imageUpload) return\n\n    const msg = {\n      type: imageUpload ? 'image' : 'text',\n      fromUser: user,\n      toUserId: chat.Users.map(user => user.id),\n      chatId: chat.id,\n      message: imageUpload ? imageUpload : message\n    }\n\n    setMessage('')\n    setImage('')\n\n    // send message with socket\n  }\n\n  return (\n    <div id='input-container'>\n      <div id='image-upload-container'>\n\n      </div>\n      <div id='message-input'>\n        <input\n          type='text'\n          placeholder='Message...'\n          onChange={e => handleMessage(e)}\n          onKeyDown={e => handleKeyDown(e, false)}\n        />\n        <FontAwesomeIcon\n          icon={['far', 'smile']}\n          className='fa-icon'\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default MessageInput;\n","/Users/roshchinaleksandr/IdeaProjects/React_Express_PostrgeSQL_WEB_CHAT/client/src/components/Chat/hooks/socketConnect.js",["138"],{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","replacedBy":"142"},{"ruleId":"143","severity":1,"message":"144","line":9,"column":1,"nodeType":"145","endLine":18,"endColumn":2},{"ruleId":"146","severity":1,"message":"147","line":7,"column":30,"nodeType":"148","messageId":"149","endLine":7,"endColumn":32},{"ruleId":"150","severity":1,"message":"151","line":10,"column":9,"nodeType":"152","messageId":"153","endLine":10,"endColumn":17},{"ruleId":"150","severity":1,"message":"154","line":4,"column":10,"nodeType":"152","messageId":"153","endLine":4,"endColumn":21},{"ruleId":"150","severity":1,"message":"155","line":6,"column":8,"nodeType":"152","messageId":"153","endLine":6,"endColumn":19},{"ruleId":"150","severity":1,"message":"156","line":14,"column":23,"nodeType":"152","messageId":"153","endLine":14,"endColumn":37},{"ruleId":"150","severity":1,"message":"151","line":10,"column":9,"nodeType":"152","messageId":"153","endLine":10,"endColumn":17},{"ruleId":"150","severity":1,"message":"157","line":15,"column":19,"nodeType":"152","messageId":"153","endLine":15,"endColumn":29},{"ruleId":"150","severity":1,"message":"158","line":2,"column":23,"nodeType":"152","messageId":"153","endLine":2,"endColumn":34},{"ruleId":"150","severity":1,"message":"159","line":12,"column":10,"nodeType":"152","messageId":"153","endLine":12,"endColumn":15},{"ruleId":"150","severity":1,"message":"160","line":29,"column":11,"nodeType":"152","messageId":"153","endLine":29,"endColumn":14},{"ruleId":"161","severity":1,"message":"162","line":15,"column":6,"nodeType":"163","endLine":15,"endColumn":16,"suggestions":"164"},"no-native-reassign",["165"],"no-negated-in-lhs",["166"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-unused-vars","'dispatch' is assigned a value but never used.","Identifier","unusedVar","'useSelector' is defined but never used.","'ChatService' is defined but never used.","'setSuggestions' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'useDispatch' is defined but never used.","'image' is assigned a value but never used.","'msg' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.","ArrayExpression",["167"],"no-global-assign","no-unsafe-negation",{"desc":"168","fix":"169"},"Update the dependencies array to be: [dispatch, user]",{"range":"170","text":"171"},[324,334],"[dispatch, user]"]